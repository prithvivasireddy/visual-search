# -*- coding: utf-8 -*-
"""app_assg_4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oCcaFdoxRV-vM2mLiPWLeOE3T3Rv14TR
"""

import streamlit as st
import requests
from PIL import Image
from io import BytesIO

DALL_E_API_ENDPOINT = "https://api.openai.com/v1/images/generations"
API_KEY = "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"

# img gen f/n
def generate_images(prompt, model, api_key):
    headers = {
        "Authorization": f"Bearer {api_key}",
        "Content-Type": "application/json",
    }
    data = {
        "model": model,
        "prompt": prompt,
        "num_images": 1,
        "size": "256x256",
    }
    response = requests.post(DALL_E_API_ENDPOINT, headers=headers, json=data)
    response.raise_for_status()
    return response.json()

st.title("REGENerated Fashion")

#dd_menu
accessory = st.selectbox("Select an accessory:", ["Shirt", "Hat", "Pants", "Shoes"])

#u_input
res="High Resolution "
customization = st.text_input("Enter how you'd like to customize the selected accessory:")

if st.button("Generate"):
    if customization:
        try:
            prompt = f"{res} {accessory} {customization}"
            result = generate_images(prompt, "image-alpha-001", API_KEY)

            img_url = result["data"][0]["url"]
            response = requests.get(img_url)
            img = Image.open(BytesIO(response.content))
            st.image(img, caption="Generated Accessory", use_column_width=True)
        except Exception as e:
            st.error(f"Error: {e}")
    else:
        st.warning("Please enter a description to generate an image.")
